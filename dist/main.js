!function(e){var t={};function n(g){if(t[g])return t[g].exports;var i=t[g]={i:g,l:!1,exports:{}};return e[g].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,g){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:g})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var g=Object.create(null);if(n.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(g,i,function(t){return e[t]}.bind(null,i));return g},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzPzU5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/load_images.js\n\n\n\nfunction loadImages(imagePaths, callback) {\n  let imagesRemaining = imagePaths.length;\n  let images = [];\n  for (let imagePath of imagePaths) {\n    let img = new Image();\n    img.onload = function() {\n      imagesRemaining--;\n      if (imagesRemaining <= 0) {\n        callback(images);\n      }\n    };\n    img.src = imagePath;\n    images.push(img);\n  }\n}\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\nconst imagePaths = [\n  './src/img/ground_tiles/brickpavers2.png',\n  './src/img/ground_tiles/concrete368a.png',\n  './src/img/ground_tiles/cretebrick970.png',\n  './src/img/ground_tiles/dirt.png',\n  './src/img/ground_tiles/dirtsand2.png',\n  './src/img/ground_tiles/rock.png',\n  './src/img/ground_tiles/snow.png',\n  './src/img/ground_tiles/stone.png'\n];\n\nconst rand = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n// CONCATENATED MODULE: ./src/map.js\n\n\n\n\n\nfunction makeMap(mapSize, tileImgs, tileWidth, tileHeight) {\n  let map = document.createElement(\"canvas\");\n  map.width = mapSize * tileWidth - mapSize;\n  map.height = mapSize * tileHeight - mapSize;\n  drawMap(map.getContext(\"2d\"), buildMapDef(mapSize, tileImgs.length), tileImgs, tileWidth, tileHeight);\n  return map;\n}\n\nfunction buildMapDef(mapSize, tileCount) {\n  let mapDef = [];\n  for (let i = 0; i < mapSize; i++) {\n    mapDef[i] = [];\n    for (let j = 0; j < mapSize; j++) {\n      mapDef[i][j] = rand(tileCount);\n    }\n  }\n  return mapDef;\n}\n\nfunction drawMap(context, mapDef, tileImgs, tileWidth, tileHeight) {\n  for (let [x, row] of mapDef.entries()) {\n    for (let [y, tileIndex] of row.entries()) {\n      drawTile(context, mapDef[0].length, tileImgs[tileIndex], x, y, tileWidth, tileHeight);\n    }\n  }\n}\n\nfunction drawTile(context, mapSize, img, mapX, mapY, tileWidth, tileHeight) {\n  let xOffset = ((mapSize * tileWidth) / 2) - (tileWidth / 2);\n  let contextX = ((mapX - mapY) * (tileWidth / 2)) - mapX + xOffset;\n  let contextY = (mapX + mapY) * (tileHeight / 2) - mapY;\n  context.drawImage(img, contextX, contextY, tileWidth, tileHeight);\n}\n\n// CONCATENATED MODULE: ./src/keys.js\n\n\n\nconst Keys = (function() {\n\n  let keysDown = [];\n  let keysPressed = [];\n\n  function keyDown(keyCode) {\n    if (keysPressed.indexOf(keyCode) < 0) {\n      keysPressed.push(keyCode);\n    }\n    if (keysDown.indexOf(keyCode) < 0) {\n      keysDown.push(keyCode);\n    }\n  }\n\n  function keyUp(keyCode) {\n    keysDown = keysDown.filter( (element) => {\n      return element != keyCode;\n    });\n  }\n\n  function resetPresses() {\n    keysPressed = [];\n  }\n\n  function getKeysPressed() {\n    return keysDown.concat(keysPressed.filter( (key) => {\n      return keysDown.indexOf(key) < 0;\n    }));\n  }\n\n  return {\n    keyDown: keyDown,\n    keyUp: keyUp,\n    resetPresses: resetPresses,\n    getKeysPressed: getKeysPressed,\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n  console.log(\"Proxma Reverie approaches!\");\n\n  var viewport = document.getElementById('viewport-canvas');\n  var viewportContext = viewport.getContext('2d');\n  let viewportWidth = 600, viewportHeight = 400;\n  viewport.width = viewportWidth;\n  viewport.height = viewportHeight;\n\n  let tileWidth = 128, tileHeight = 64;\n\n  let mapSize = 10;\n\n  let viewOffsetLimitX = (mapSize * tileWidth) - viewportWidth - mapSize;\n  let viewOffsetLimitY = (mapSize * tileHeight) - viewportHeight - mapSize;\n\n  viewportContext.fillStyle = 'white';\n  viewportContext.fillRect(0, 0, viewportWidth, viewportHeight);\n\n  loadImages(imagePaths, (images) => {\n    document.getElementById('loading-images-message').classList.add('hide');\n    document.getElementById('images-loaded-message').classList.remove('hide');\n\n    let map = makeMap(mapSize, images, tileWidth, tileHeight);\n\n    setTimeout(() => {\n      doTick(map);\n    }, 2000);\n\n  });\n\n  let viewOffsetX = ((mapSize * tileWidth - mapSize) / 2) - (viewportWidth / 2);\n  let viewOffsetY = ((mapSize * tileHeight - mapSize) / 2) - (viewportHeight / 2);\n\n  function doTick(map) {\n    viewportContext.fillRect(0, 0, viewportWidth, viewportHeight);\n    viewportContext.drawImage(map, viewOffsetX, viewOffsetY, viewportWidth, viewportHeight, 0, 0, viewportWidth, viewportHeight);\n    for (let keyCode of Keys.getKeysPressed()) {\n      let newOffset;\n      switch (keyCode) {\n        case \"ArrowLeft\":\n          newOffset = viewOffsetX - 5;\n          if (newOffset < 0) {\n            newOffset = 0;\n          }\n          viewOffsetX = newOffset;\n          break;\n        case \"ArrowRight\":\n          newOffset = viewOffsetX + 5;\n          if (newOffset > viewOffsetLimitX) {\n            newOffset = viewOffsetLimitX;\n          }\n          viewOffsetX = newOffset;\n          break;\n        case \"ArrowUp\":\n          newOffset = viewOffsetY - 5;\n          if (newOffset < 0) {\n            newOffset = 0;\n          }\n          viewOffsetY = newOffset;\n          break;\n        case \"ArrowDown\":\n          newOffset = viewOffsetY + 5;\n          if (newOffset > viewOffsetLimitY) {\n            newOffset = viewOffsetLimitY;\n          }\n          viewOffsetY = newOffset;\n          break;\n      }\n    }\n    Keys.resetPresses();\n\n    setTimeout(() => {\n      doTick(map);\n    }, 25);\n\n  }\n\n  document.addEventListener('keydown', (event) => {\n    Keys.keyDown(event.key);\n  });\n\n  document.addEventListener('keyup', (event) => {\n    Keys.keyUp(event.key);\n  });\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);