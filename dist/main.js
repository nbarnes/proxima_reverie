!function(n){var t={};function e(g){if(t[g])return t[g].exports;var i=t[g]={i:g,l:!1,exports:{}};return n[g].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,g){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:g})},e.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/input.js\n\n\nconst Input = (function() {\n  let keysDown = [];\n  let keysPressed = [];\n  let mouseEvent = undefined;\n\n  function keyDown(keyCode) {\n    if (keysPressed.indexOf(keyCode) < 0) {\n      keysPressed.push(keyCode);\n    }\n    if (keysDown.indexOf(keyCode) < 0) {\n      keysDown.push(keyCode);\n    }\n  }\n\n  function keyUp(keyCode) {\n    keysDown = keysDown.filter(element => {\n      return element != keyCode;\n    });\n  }\n\n  function getKeysPressed() {\n    return keysDown.concat(\n      keysPressed.filter(key => {\n        return keysDown.indexOf(key) < 0;\n      })\n    );\n  }\n\n  function mouseUp(event) {\n    mouseEvent = event;\n  }\n\n  function getMouseEvent() {\n    return mouseEvent;\n  }\n\n  function resetInputs() {\n    keysPressed = [];\n    mouseEvent = undefined;\n  }\n\n  return {\n    keyDown: keyDown,\n    keyUp: keyUp,\n    getKeysPressed: getKeysPressed,\n    mouseUp: mouseUp,\n    getMouseEvent: getMouseEvent,\n    resetInputs: resetInputs\n  };\n})();\n\n// CONCATENATED MODULE: ./src/asset_manager.js\n\n\nconst Assets = (function() {\n  let assets = {};\n\n  function loadAssets(assetOwners, callback) {\n    let tempAssetPaths = [];\n    for (let assetOwner of assetOwners) {\n      tempAssetPaths = tempAssetPaths.concat(assetOwner.assetPaths);\n    }\n    let assetPaths = [...new Set(tempAssetPaths)];\n\n    let assetsRemaining = assetPaths.length;\n    for (let assetPath of assetPaths) {\n      let asset = new Image();\n      asset.onload = function() {\n        assets[assetPath] = asset;\n        assetsRemaining--;\n        if (assetsRemaining <= 0) {\n          callback();\n        }\n      };\n      asset.src = assetPath;\n    }\n  }\n\n  function get(assetPath) {\n    return assets[assetPath];\n  }\n\n  return {\n    loadAssets: loadAssets,\n    get: get\n  };\n})();\n\n// CONCATENATED MODULE: ./src/asset_owner.js\n\n\n\nclass AssetOwner {\n\n  constructor(assetPaths) {\n    this.assetPaths = assetPaths;\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/tile.js\n\n\n\n\n\n\nclass tile_Tile extends AssetOwner {\n\n  constructor(assetPaths) {\n    super(assetPaths);\n    this.tileWidth = 128;\n    this.tileHeight = 64;\n    this.imageFrameIndex = 0;\n  }\n\n  get img() {\n    return Assets.get(this.assetPaths[this.imageFrameIndex]);\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/util.js\n\n\nconst rand = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst coordsEqual = (a, b) => {\n  return a.x == b.x && a.y == b.y;\n};\n\nconst entityMapLocationFromTile = (\n  tile,\n  map,\n  frameWidth,\n  frameHeight\n) => {\n  let mapDestination = map.mapCoordsForTile({ x: tile.x, y: tile.y });\n  let tileOffset = map.tileOffsets;\n  let frameOffset = { x: frameWidth / 2, y: frameHeight };\n  return {\n    x: mapDestination.x + tileOffset.x - frameOffset.x,\n    y: mapDestination.y + tileOffset.y - frameOffset.y\n  };\n};\n\nconst Facing = {\n  SOUTHEAST: 7,\n  SOUTHWEST: 1,\n  NORTHWEST: 3,\n  NORTHEAST: 5\n};\n\n// CONCATENATED MODULE: ./src/map.js\n\n\n\n\nclass Map {\n  constructor(tiles, mapSize) {\n    this.tiles = tiles;\n    this.mapSize = mapSize;\n    this.tileWidth = tiles[0].tileWidth;\n    this.tileHeight = tiles[0].tileHeight;\n    this.mapDef = buildMapDef(this);\n  }\n\n  get mapCanvas() {\n    if (this.myMapCanvas == undefined) {\n      this.myMapCanvas = drawMapCanvas(this);\n    }\n    return this.myMapCanvas;\n  }\n\n  mapCoordsForTile(tileCoords) {\n    let xOffset = (this.mapSize * this.tileWidth) / 2 - this.tileWidth / 2;\n    let mapX = (tileCoords.x - tileCoords.y) * (this.tileWidth / 2) + xOffset;\n    let mapY = (tileCoords.x + tileCoords.y) * (this.tileHeight / 2);\n    return { x: mapX, y: mapY };\n  }\n\n  get tileOffsets() {\n    return { x: this.tileWidth / 2, y: this.tileHeight / 2 };\n  }\n}\n\nfunction buildMapDef(map) {\n  let mapDef = [];\n  for (let i = 0; i < map.mapSize; i++) {\n    mapDef[i] = [];\n    for (let j = 0; j < map.mapSize; j++) {\n      mapDef[i][j] = map.tiles[rand(map.tiles.length)];\n    }\n  }\n  return mapDef;\n}\n\nfunction drawMapCanvas(map) {\n  let mapCanvas = document.createElement('canvas');\n  mapCanvas.width = map.mapSize * map.tileWidth - map.mapSize;\n  mapCanvas.height = map.mapSize * map.tileHeight - map.mapSize;\n\n  for (let [x, row] of map.mapDef.entries()) {\n    for (let [y, tile] of row.entries()) {\n      drawTile(map, mapCanvas.getContext('2d'), tile, x, y);\n    }\n  }\n  return mapCanvas;\n}\n\nfunction drawTile(map, context, tile, mapX, mapY) {\n  let contextCoords = map.mapCoordsForTile({ x: mapX, y: mapY });\n  context.drawImage(\n    tile.img,\n    contextCoords.x,\n    contextCoords.y,\n    map.tileWidth,\n    map.tileHeight\n  );\n}\n\n// CONCATENATED MODULE: ./src/entity.js\n\n\n\n\n\n\nclass entity_Entity extends AssetOwner {\n  constructor(entityDef, map, brain, facing) {\n    super(entityDef.imagePaths);\n    this.frameWidth = 60;\n    this.frameHeight = 110;\n    this.map = map;\n    this.currentTile = entityDef.startTile || { x: 0, y: 0 };\n    this.myLocation = entityMapLocationFromTile(\n      this.currentTile,\n      this.map,\n      this.frameWidth,\n      this.frameHeight\n    );\n    this.tilePath = [];\n    this.brain = brain;\n    this.destination = undefined;\n    this.facing = facing || Facing.SOUTHEAST;\n  }\n\n  get image() {\n    return Assets.get(this.assetPaths[0]);\n  }\n\n  get frameXOrigin() {\n    return 0;\n  }\n\n  get frameYOrigin() {\n    return 0;\n  }\n\n  get location() {\n    return this.myLocation;\n  }\n\n  set location(newLocation) {\n    let newFacing = undefined;\n    if (newLocation != undefined && this.myLocation != undefined) {\n      if (\n        newLocation.x >= this.myLocation.x &&\n        newLocation.y >= this.myLocation.y\n      ) {\n        newFacing = Facing.SOUTHEAST;\n      } else if (\n        newLocation.x >= this.myLocation.x &&\n        newLocation.y <= this.myLocation.y\n      ) {\n        newFacing = Facing.NORTHEAST;\n      } else if (\n        newLocation.x <= this.myLocation.x &&\n        newLocation.y <= this.myLocation.y\n      ) {\n        newFacing = Facing.NORTHWEST;\n      } else if (\n        newLocation.x <= this.myLocation.x &&\n        newLocation.y >= this.myLocation.y\n      ) {\n        newFacing = Facing.SOUTHWEST;\n      } else {\n        console.log('Error in facing alg in Entity; this should never happen');\n        newFacing = Facing.NORTHEAST;\n      }\n    }\n    this.facing = newFacing;\n    this.myLocation = newLocation;\n  }\n\n  get frameXOrigin() {\n    return this.frameWidth * this.facing;\n  }\n\n  get frameYOrigin() {\n    return 0;\n  }\n\n  respondToMouse(eventTile, blockingAnimationCallback) {\n    if (this.activity == undefined) {\n      this.activity = this.brain.getActivity(\n        this,\n        eventTile,\n        blockingAnimationCallback\n      );\n    }\n  }\n\n  activityDone() {\n    this.activity = undefined;\n  }\n\n  tick() {\n    if (this.activity != undefined) {\n      this.activity();\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./src/brain.js\n\n\n\n\nclass brain_MobileBrain {\n  getActivity(entity, eventTile, blockingAnimationCallback) {\n    let startTile = entity.currentTile;\n    let endTile = eventTile;\n    let tilePath = buildTilePath(startTile, endTile);\n    let destination = undefined;\n    blockingAnimationCallback(true);\n    return () => {\n      if (destination != undefined) {\n        let nextPosition = getNextMapPosition(entity, destination);\n        entity.location = nextPosition;\n        if (coordsEqual(entity.location, destination)) {\n          destination = undefined;\n        }\n      } else if (tilePath.length > 0) {\n        entity.currentTile = tilePath[0];\n        destination = getDestination(entity, tilePath);\n      } else {\n        entity.activityDone();\n        blockingAnimationCallback(false);\n      }\n    };\n  }\n}\n\nfunction getNextMapPosition(entity, destination) {\n  let currentLoc = { x: entity.location.x, y: entity.location.y };\n  let dx = currentLoc.x - destination.x,\n    dy = currentLoc.y - destination.y;\n  let dist = Math.sqrt(dx * dx + dy * dy);\n  let velX = (dx / dist) * 5;\n  let velY = (dy / dist) * 5;\n  if (Math.abs(dx) < Math.abs(velX)) {\n    velX = dx;\n  }\n  if (Math.abs(dy) < Math.abs(velY)) {\n    velY = dy;\n  }\n  return {\n    x: (currentLoc.x -= velX),\n    y: (currentLoc.y -= velY)\n  };\n}\n\nfunction getDestination(entity, tilePath) {\n  let nextTileDestination = tilePath.shift();\n  let nextDestination = undefined;\n  if (nextTileDestination != undefined) {\n    nextDestination = entityMapLocationFromTile(\n      nextTileDestination,\n      entity.map,\n      entity.frameWidth,\n      entity.frameHeight\n    );\n  }\n  return nextDestination;\n}\n\n// Uses Brensenham's line algorithm\nfunction buildTilePath(start, end) {\n  let path = [];\n\n  let currentX = start.x,\n    currentY = start.y;\n  let deltaX = Math.abs(end.x - start.x),\n    deltaY = Math.abs(end.y - start.y);\n  let slopeX = start.x < end.x ? 1 : -1,\n    slopeY = start.y < end.y ? 1 : -1;\n  let err = deltaX - deltaY;\n\n  while (currentX != end.x || currentY != end.y) {\n    let err2 = 2 * err;\n    if (err2 > deltaY * -1) {\n      err -= deltaY;\n      currentX += slopeX;\n    } else if (err2 < deltaX) {\n      err += deltaX;\n      currentY += slopeY;\n    }\n    path.push({ x: currentX, y: currentY });\n  }\n  return path;\n}\n\n// CONCATENATED MODULE: ./src/scene.js\n\n\n\n\n\n\n\n\n\nclass scene_Scene {\n  constructor(sceneDef, viewport, viewportDimensions, loadCompleteCallback) {\n    let tiles = sceneDef.mapDef.tileImagePaths.map(tileImagePath => {\n      return new tile_Tile([tileImagePath]);\n    });\n\n    this.map = new Map(tiles, sceneDef.mapDef.mapSize);\n\n    this.entities = sceneDef.entityDefs.map(entityDef => {\n      return new entity_Entity(entityDef, this.map, new brain_MobileBrain());\n    });\n    this.activeEntity = this.entities[0];\n\n    this.viewport = viewport;\n    this.viewportDimensions = viewportDimensions;\n\n    Assets.loadAssets([...tiles, ...this.entities], () => {\n      this.viewportOffsetDimensions = {\n        x: this.map.mapCanvas.width / 2 - viewportDimensions.x / 2,\n        y: this.map.mapCanvas.height / 2 - viewportDimensions.y / 2\n      };\n      loadCompleteCallback();\n    });\n\n    this.waitingOnAnimation = false;\n  }\n\n  tick() {\n    let mouseEvent = Input.getMouseEvent();\n    if (mouseEvent != undefined) {\n      let eventViewportPosition = getEventViewportPosition(\n        this.viewport,\n        mouseEvent\n      );\n      let eventMapPosition = getCursorMapPosition(\n        this.viewportOffsetDimensions,\n        eventViewportPosition\n      );\n      let tilePosition = getCursorTilePosition(this.map, eventMapPosition);\n\n      if (!this.waitingOnAnimation) {\n        this.activeEntity.respondToMouse(tilePosition, shouldWait => {\n          this.waitingOnAnimation = shouldWait;\n        });\n\n        if (this.entities.slice(-1)[0] == this.activeEntity) {\n          this.activeEntity = this.entities[0];\n        } else {\n          this.activeEntity = this.entities[\n            this.entities.indexOf(this.activeEntity) + 1\n          ];\n        }\n      }\n    }\n\n    this.entities.forEach(entity => {\n      entity.tick();\n    });\n\n    let context = this.viewport.getContext('2d');\n    context.clearRect(\n      0,\n      0,\n      this.viewportDimensions.x,\n      this.viewportDimensions.y\n    );\n    context.drawImage(\n      this.map.mapCanvas,\n      this.viewportOffsetDimensions.x,\n      this.viewportOffsetDimensions.y,\n      this.viewportDimensions.x,\n      this.viewportDimensions.y,\n      0,\n      0,\n      this.viewportDimensions.x,\n      this.viewportDimensions.y\n    );\n\n    this.entities.forEach(entity => {\n      context.drawImage(\n        entity.image,\n        entity.frameXOrigin,\n        entity.frameYOrigin,\n        entity.frameWidth,\n        entity.frameHeight,\n        entity.location.x - this.viewportOffsetDimensions.x,\n        entity.location.y - this.viewportOffsetDimensions.y,\n        entity.frameWidth,\n        entity.frameHeight\n      );\n    });\n\n    Input.resetInputs();\n  }\n}\n\nfunction getCursorMapPosition(viewOffsets, position) {\n  return { x: viewOffsets.x + position.x, y: viewOffsets.y + position.y };\n}\n\nfunction getCursorTilePosition(map, position) {\n  let halfTileWidth = map.tileWidth / 2;\n  let halfTileHeight = map.tileHeight / 2;\n  let halfMapSize = map.mapSize / 2;\n  let tileX =\n    (position.x / halfTileWidth + position.y / halfTileHeight) / 2 -\n    halfMapSize;\n  let tileY =\n    (position.y / halfTileHeight - position.x / halfTileWidth) / 2 +\n    halfMapSize;\n  return { x: Math.floor(tileX), y: Math.floor(tileY) };\n}\n\nfunction getEventViewportPosition(viewport, event) {\n  let rect = viewport.getBoundingClientRect();\n  let x = event.clientX - rect.left;\n  let y = event.clientY - rect.top;\n  return { x: x, y: y };\n}\n\n// CONCATENATED MODULE: ./src/scene_definition.js\n\n\nconst scene_definition_sceneDef = {\n  mapDef: {\n    mapSize: 10,\n    tileImagePaths: [\n      './src/img/ground_tiles/brickpavers2.png',\n      './src/img/ground_tiles/concrete368a.png',\n      './src/img/ground_tiles/cretebrick970.png',\n      './src/img/ground_tiles/dirt.png',\n      './src/img/ground_tiles/dirtsand2.png',\n      './src/img/ground_tiles/rock.png',\n      './src/img/ground_tiles/snow.png',\n      './src/img/ground_tiles/stone.png'\n    ]\n  },\n  entityDefs: [\n    {\n      imagePaths: ['./src/img/mobiles/8way_mobile.png'],\n      startTile: { x: 3, y: 3 }\n    },\n    {\n      imagePaths: ['./src/img/mobiles/8way_mobile.png'],\n      startTile: { x: 5, y: 4 }\n    },\n    {\n      imagePaths: ['./src/img/mobiles/8way_mobile.png'],\n      startTile: { x: 3, y: 6 }\n    }\n  ]\n};\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('Proxma Reverie approaches!');\n\n  let tickLength = 50;\n\n  var viewport = document.getElementById('viewport-canvas');\n  let viewportDimensions = { x: 600, y: 400 };\n  viewport.width = viewportDimensions.x;\n  viewport.height = viewportDimensions.y;\n\n  let scene = new scene_Scene(scene_definition_sceneDef, viewport, viewportDimensions, () => {\n    setTimeout(() => {\n      tick();\n    }, 0);\n  });\n\n  function tick() {\n    scene.tick();\n    setTimeout(() => {\n      tick();\n    }, tickLength);\n  }\n\n  document.addEventListener('keydown', event => {\n    Input.keyDown(event.key);\n  });\n\n  document.addEventListener('keyup', event => {\n    Input.keyUp(event.key);\n  });\n\n  viewport.addEventListener('mouseup', event => {\n    Input.mouseUp(event);\n  });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzPzU5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")}]);