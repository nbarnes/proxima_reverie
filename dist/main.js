!function(t){var n={};function e(g){if(n[g])return n[g].exports;var i=n[g]={i:g,l:!1,exports:{}};return t[g].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,g){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:g})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/asset_manager.js\n\n\n\nconst Assets = (function() {\n\n  let assets = {};\n\n  function loadAssets(assetOwners, callback) {\n    let tempAssetPaths = []\n    for (let assetOwner of assetOwners) {\n      tempAssetPaths = tempAssetPaths.concat(assetOwner.assetPaths);\n    }\n    let assetPaths = [... new Set(tempAssetPaths)];\n\n    let assetsRemaining = assetPaths.length;\n    for (let assetPath of assetPaths) {\n\n      let asset = new Image();\n      asset.onload = function() {\n        assets[assetPath] = asset;\n        assetsRemaining--;\n        if (assetsRemaining <= 0) {\n          callback();\n        }\n      };\n      asset.src = assetPath;\n    }\n  }\n\n  function get(assetPath) {\n    return assets[assetPath];\n  }\n\n  return {\n    loadAssets: loadAssets,\n    get: get\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/asset_owner.js\n\n\n\nclass AssetOwner {\n\n  constructor(assetPaths) {\n    this.assetPaths = assetPaths;\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/tile.js\n\n\n\n\n\n\nclass tile_Tile extends AssetOwner {\n\n  constructor(assetPaths) {\n    super(assetPaths);\n    this.tileWidth = 128;\n    this.tileHeight = 64;\n    this.imageFrameIndex = 0;\n  }\n\n  get img() {\n    return Assets.get(this.assetPaths[this.imageFrameIndex]);\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\nconst tileImagePaths = [\n  './src/img/ground_tiles/brickpavers2.png',\n  './src/img/ground_tiles/concrete368a.png',\n  './src/img/ground_tiles/cretebrick970.png',\n  './src/img/ground_tiles/dirt.png',\n  './src/img/ground_tiles/dirtsand2.png',\n  './src/img/ground_tiles/rock.png',\n  './src/img/ground_tiles/snow.png',\n  './src/img/ground_tiles/stone.png'\n];\n\nconst mobileSpritePaths = [\n  './src/img/mobiles/8way_mobile.png'\n]\n\nconst rand = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n// CONCATENATED MODULE: ./src/map.js\n\n\n\n\n\nclass Map {\n\n  constructor(tiles, mapSize) {\n    this.tiles = tiles;\n    this.mapSize = mapSize;\n    this.tileWidth = tiles[0].tileWidth;\n    this.tileHeight = tiles[0].tileHeight;\n    this.mapDef = buildMapDef(this);\n  }\n\n  get mapCanvas() {\n    if (this.myMapCanvas == undefined) {\n      this.myMapCanvas = drawMapCanvas(this);\n    }\n    return this.myMapCanvas;\n  }\n\n  mapCoordsForTile(tileCoords) {\n    let xOffset = ((this.mapSize * this.tileWidth) / 2) - (this.tileWidth / 2);\n    let mapX = ((tileCoords.x - tileCoords.y) * (this.tileWidth / 2)) + xOffset;\n    let mapY = (tileCoords.x + tileCoords.y) * (this.tileHeight / 2);\n    return {x: mapX, y: mapY};\n  }\n\n};\n\nfunction buildMapDef(map) {\n  let mapDef = [];\n  for (let i = 0; i < map.mapSize; i++) {\n    mapDef[i] = [];\n    for (let j = 0; j < map.mapSize; j++) {\n      mapDef[i][j] = map.tiles[rand(map.tiles.length)];\n    }\n  }\n  return mapDef;\n}\n\nfunction drawMapCanvas(map) {\n  let mapCanvas = document.createElement(\"canvas\");\n  mapCanvas.width = map.mapSize * map.tileWidth - map.mapSize;\n  mapCanvas.height = map.mapSize * map.tileHeight - map.mapSize;\n\n  for (let [x, row] of map.mapDef.entries()) {\n    for (let [y, tile] of row.entries()) {\n      drawTile(map, mapCanvas.getContext(\"2d\"), tile, x, y);\n    }\n  }\n  return mapCanvas;\n}\n\nfunction drawTile(map, context, tile, mapX, mapY) {\n  let contextCoords = map.mapCoordsForTile({x: mapX, y: mapY});\n  context.drawImage(tile.img, contextCoords.x, contextCoords.y, map.tileWidth, map.tileHeight);\n}\n\n\n// CONCATENATED MODULE: ./src/entity.js\n\n\n\n\n\n\nclass entity_Entity extends AssetOwner {\n\n  constructor(assetPaths, map, startingXLoc, startingYLoc) {\n    super(assetPaths);\n    this.frameWidth = 60;\n    this.frameHeight = 110;\n    this.map = map;\n    this.location = {\n      x: ((startingXLoc === undefined) ? 0 : startingXLoc),\n      y: ((startingYLoc === undefined) ? 0 : startingYLoc)\n    };\n    this.destination = undefined;\n  }\n\n  get image() {\n    return Assets.get(this.assetPaths[0]);\n  }\n\n  get frameXOrigin() {\n    return 0;\n  }\n\n  get frameYOrigin() {\n    return 0;\n  }\n\n  respondToMouse(event) {\n    if (event != undefined) {\n      let newDestination = this.mapCoordsWithFrameOffset(this.map.mapCoordsForTile({x: event.tileCoord.x, y: event.tileCoord.y}));\n      this.destination = {x: newDestination.x, y: newDestination.y};\n    }\n  }\n\n  tick() {\n    if (this.destination != undefined) {\n      let dx = this.location.x - this.destination.x, dy = this.location.y - this.destination.y;\n      let dist = Math.sqrt(dx*dx+dy*dy);\n\n      if (dist != 0) {\n        let velX = ( dx / dist ) * 5;\n        let velY = ( dy / dist ) * 5;\n\n        if (Math.abs(dx) < Math.abs(velX)) {\n          velX = dx;\n        }\n        if (Math.abs(dy) < Math.abs(velY)) {\n          velY = dy;\n        }\n\n        this.location.x -= velX;\n        this.location.y -= velY;\n      } else {\n        this.destination = undefined;\n      }\n\n    }\n  }\n\n  mapCoordsWithFrameOffset(mapCoords) {\n    // return {x: mapCoords.x - (this.frameWidth / 2), y: mapCoords.y - (this.frameHeight)};\n    return {x: mapCoords.x, y: mapCoords.y};\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/input.js\n\n\n\nconst Input = (function() {\n\n  let keysDown = [];\n  let keysPressed = [];\n  let mouseEventPoint = undefined;\n\n  function keyDown(keyCode) {\n    if (keysPressed.indexOf(keyCode) < 0) {\n      keysPressed.push(keyCode);\n    }\n    if (keysDown.indexOf(keyCode) < 0) {\n      keysDown.push(keyCode);\n    }\n  }\n\n  function keyUp(keyCode) {\n    keysDown = keysDown.filter( (element) => {\n      return element != keyCode;\n    });\n  }\n\n  function getKeysPressed() {\n    return keysDown.concat(keysPressed.filter( (key) => {\n      return keysDown.indexOf(key) < 0;\n    }));\n  }\n\n  function mouseUp(point) {\n    mouseEventPoint = point;\n  }\n\n  function getMouseEvent() {\n    return mouseEventPoint;\n  }\n\n  function resetInputs() {\n    keysPressed = [];\n    mouseEventPoint = undefined;\n  }\n\n  return {\n    keyDown: keyDown,\n    keyUp: keyUp,\n    getKeysPressed: getKeysPressed,\n    mouseUp: mouseUp,\n    getMouseEvent: getMouseEvent,\n    resetInputs: resetInputs\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n  console.log(\"Proxma Reverie approaches!\");\n\n  let tickLength = 50;\n\n  var viewport = document.getElementById('viewport-canvas');\n  var viewportContext = viewport.getContext('2d');\n  let viewportWidth = 600, viewportHeight = 400;\n  viewport.width = viewportWidth;\n  viewport.height = viewportHeight;\n\n  let mapSize = 10;\n\n  // let viewOffsetLimitX = (mapSize * tileWidth) - viewportWidth - mapSize;\n  // let viewOffsetLimitY = (mapSize * tileHeight) - viewportHeight - mapSize;\n\n  let tiles = [];\n  for (let tileImagePath of tileImagePaths) {\n    tiles.push(new tile_Tile([tileImagePath]));\n  }\n  let map = new Map(tiles, mapSize);\n  let mobile = new entity_Entity(mobileSpritePaths, map, viewportWidth / 2, viewportHeight / 2);\n\n  Assets.loadAssets([...tiles, mobile], () => {\n\n    document.getElementById('loading-images-message').classList.add('hide');\n    document.getElementById('images-loaded-message').classList.remove('hide');\n\n    setTimeout(() => {\n\n      let viewOffsetX = ((map.mapCanvas.width) / 2) - (viewportWidth / 2);\n      let viewOffsetY = ((map.mapCanvas.height) / 2) - (viewportHeight / 2);\n\n      doTick(map, viewOffsetX, viewOffsetY);\n    }, tickLength);\n\n  });\n\n  function doTick(map, viewOffsetX, viewOffsetY) {\n    // console.log('tick');\n    viewportContext.clearRect(0, 0, viewportWidth, viewportHeight);\n    viewportContext.drawImage(map.mapCanvas, viewOffsetX, viewOffsetY, viewportWidth, viewportHeight, 0, 0, viewportWidth, viewportHeight);\n\n    let mouseEvent = Input.getMouseEvent();\n    if (mouseEvent != undefined) {\n\n      let mapPosition = getCursorMapPosition(viewOffsetX, viewOffsetY, mouseEvent);\n      let tilePosition = getCursorTilePosition(map, mapPosition);\n      // console.log(\"\");\n      // console.log(`canvas position: ${mouseEvent.x}, ${mouseEvent.y}`);\n      // console.log(`map position: ${mapPosition.x}, ${mapPosition.y}`);\n      // console.log(`tile position: ${tilePosition.x}, ${tilePosition.y}`);\n      // console.log(\"\");\n\n      mobile.respondToMouse({mapCoord: mapPosition, tileCoord: tilePosition});\n    }\n\n    mobile.tick();\n    // console.log(mobile.location);\n    viewportContext.drawImage(\n      mobile.image,\n      mobile.frameXOrigin, mobile.frameYOrigin,\n      mobile.frameWidth, mobile.frameHeight,\n      (mobile.location.x - viewOffsetX),\n      (mobile.location.y - viewOffsetY),\n      mobile.frameWidth, mobile.frameHeight\n    );\n\n    Input.resetInputs();\n\n    setTimeout(() => {\n      doTick(map, viewOffsetX, viewOffsetY);\n    }, tickLength);\n\n  }\n\n  document.addEventListener('keydown', (event) => {\n    Input.keyDown(event.key);\n  });\n\n  document.addEventListener('keyup', (event) => {\n    Input.keyUp(event.key);\n  });\n\n  viewport.addEventListener('mouseup', (event) => {\n    Input.mouseUp(getCursorCanvasPosition(viewport, event));\n  });\n\n  function getCursorCanvasPosition(canvas, position) {\n    let rect = canvas.getBoundingClientRect();\n    let x = position.clientX - rect.left;\n    let y = position.clientY - rect.top;\n    return { x: x, y: y };\n  }\n\n  function getCursorMapPosition(viewOffsetX, viewOffsetY, position) {\n    let mouseMapX = viewOffsetX + position.x;\n    let mouseMapY = viewOffsetY + position.y;\n    return { x: mouseMapX, y: mouseMapY };\n  }\n\n  function getCursorTilePosition(map, position) {\n    let halfTileWidth = map.tileWidth / 2;\n    let halfTileHeight = map.tileHeight / 2;\n    let halfMapSize = map.mapSize / 2;\n    let tileX = ((position.x / halfTileWidth  + position.y / halfTileHeight) / 2) - halfMapSize;\n    let tileY = ((position.y / halfTileHeight - position.x / halfTileWidth) / 2) + halfMapSize;\n    return { x: Math.floor(tileX), y: Math.floor(tileY) };\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hc3NldF9tYW5hZ2VyLmpzP2FlMGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0X293bmVyLmpzPzc0YTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RpbGUuanM/MGM4MCIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC5qcz9lMGViIiwid2VicGFjazovLy8uL3NyYy9tYXAuanM/MThiYSIsIndlYnBhY2s6Ly8vLi9zcmMvZW50aXR5LmpzPzYyN2EiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lucHV0LmpzPzllZjgiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IEFzc2V0cyA9IChmdW5jdGlvbigpIHtcblxuICBsZXQgYXNzZXRzID0ge307XG5cbiAgZnVuY3Rpb24gbG9hZEFzc2V0cyhhc3NldE93bmVycywgY2FsbGJhY2spIHtcbiAgICBsZXQgdGVtcEFzc2V0UGF0aHMgPSBbXVxuICAgIGZvciAobGV0IGFzc2V0T3duZXIgb2YgYXNzZXRPd25lcnMpIHtcbiAgICAgIHRlbXBBc3NldFBhdGhzID0gdGVtcEFzc2V0UGF0aHMuY29uY2F0KGFzc2V0T3duZXIuYXNzZXRQYXRocyk7XG4gICAgfVxuICAgIGxldCBhc3NldFBhdGhzID0gWy4uLiBuZXcgU2V0KHRlbXBBc3NldFBhdGhzKV07XG5cbiAgICBsZXQgYXNzZXRzUmVtYWluaW5nID0gYXNzZXRQYXRocy5sZW5ndGg7XG4gICAgZm9yIChsZXQgYXNzZXRQYXRoIG9mIGFzc2V0UGF0aHMpIHtcblxuICAgICAgbGV0IGFzc2V0ID0gbmV3IEltYWdlKCk7XG4gICAgICBhc3NldC5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgYXNzZXRzW2Fzc2V0UGF0aF0gPSBhc3NldDtcbiAgICAgICAgYXNzZXRzUmVtYWluaW5nLS07XG4gICAgICAgIGlmIChhc3NldHNSZW1haW5pbmcgPD0gMCkge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBhc3NldC5zcmMgPSBhc3NldFBhdGg7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0KGFzc2V0UGF0aCkge1xuICAgIHJldHVybiBhc3NldHNbYXNzZXRQYXRoXTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbG9hZEFzc2V0czogbG9hZEFzc2V0cyxcbiAgICBnZXQ6IGdldFxuICB9XG5cbn0pKCk7XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBc3NldE93bmVyIHtcblxuICBjb25zdHJ1Y3Rvcihhc3NldFBhdGhzKSB7XG4gICAgdGhpcy5hc3NldFBhdGhzID0gYXNzZXRQYXRocztcbiAgfVxuXG59XG4iLCJcblwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBBc3NldHMgfSBmcm9tIFwiLi9hc3NldF9tYW5hZ2VyXCI7XG5pbXBvcnQgQXNzZXRPd25lciBmcm9tIFwiLi9hc3NldF9vd25lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaWxlIGV4dGVuZHMgQXNzZXRPd25lciB7XG5cbiAgY29uc3RydWN0b3IoYXNzZXRQYXRocykge1xuICAgIHN1cGVyKGFzc2V0UGF0aHMpO1xuICAgIHRoaXMudGlsZVdpZHRoID0gMTI4O1xuICAgIHRoaXMudGlsZUhlaWdodCA9IDY0O1xuICAgIHRoaXMuaW1hZ2VGcmFtZUluZGV4ID0gMDtcbiAgfVxuXG4gIGdldCBpbWcoKSB7XG4gICAgcmV0dXJuIEFzc2V0cy5nZXQodGhpcy5hc3NldFBhdGhzW3RoaXMuaW1hZ2VGcmFtZUluZGV4XSk7XG4gIH1cblxufVxuIiwiXG5cInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IHRpbGVJbWFnZVBhdGhzID0gW1xuICAnLi9zcmMvaW1nL2dyb3VuZF90aWxlcy9icmlja3BhdmVyczIucG5nJyxcbiAgJy4vc3JjL2ltZy9ncm91bmRfdGlsZXMvY29uY3JldGUzNjhhLnBuZycsXG4gICcuL3NyYy9pbWcvZ3JvdW5kX3RpbGVzL2NyZXRlYnJpY2s5NzAucG5nJyxcbiAgJy4vc3JjL2ltZy9ncm91bmRfdGlsZXMvZGlydC5wbmcnLFxuICAnLi9zcmMvaW1nL2dyb3VuZF90aWxlcy9kaXJ0c2FuZDIucG5nJyxcbiAgJy4vc3JjL2ltZy9ncm91bmRfdGlsZXMvcm9jay5wbmcnLFxuICAnLi9zcmMvaW1nL2dyb3VuZF90aWxlcy9zbm93LnBuZycsXG4gICcuL3NyYy9pbWcvZ3JvdW5kX3RpbGVzL3N0b25lLnBuZydcbl07XG5cbmV4cG9ydCBjb25zdCBtb2JpbGVTcHJpdGVQYXRocyA9IFtcbiAgJy4vc3JjL2ltZy9tb2JpbGVzLzh3YXlfbW9iaWxlLnBuZydcbl1cblxuZXhwb3J0IGNvbnN0IHJhbmQgPSAobWF4KSA9PiB7XG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKG1heCkpO1xufVxuIiwiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcmFuZCB9IGZyb20gXCIuL3V0aWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFwIHtcblxuICBjb25zdHJ1Y3Rvcih0aWxlcywgbWFwU2l6ZSkge1xuICAgIHRoaXMudGlsZXMgPSB0aWxlcztcbiAgICB0aGlzLm1hcFNpemUgPSBtYXBTaXplO1xuICAgIHRoaXMudGlsZVdpZHRoID0gdGlsZXNbMF0udGlsZVdpZHRoO1xuICAgIHRoaXMudGlsZUhlaWdodCA9IHRpbGVzWzBdLnRpbGVIZWlnaHQ7XG4gICAgdGhpcy5tYXBEZWYgPSBidWlsZE1hcERlZih0aGlzKTtcbiAgfVxuXG4gIGdldCBtYXBDYW52YXMoKSB7XG4gICAgaWYgKHRoaXMubXlNYXBDYW52YXMgPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLm15TWFwQ2FudmFzID0gZHJhd01hcENhbnZhcyh0aGlzKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubXlNYXBDYW52YXM7XG4gIH1cblxuICBtYXBDb29yZHNGb3JUaWxlKHRpbGVDb29yZHMpIHtcbiAgICBsZXQgeE9mZnNldCA9ICgodGhpcy5tYXBTaXplICogdGhpcy50aWxlV2lkdGgpIC8gMikgLSAodGhpcy50aWxlV2lkdGggLyAyKTtcbiAgICBsZXQgbWFwWCA9ICgodGlsZUNvb3Jkcy54IC0gdGlsZUNvb3Jkcy55KSAqICh0aGlzLnRpbGVXaWR0aCAvIDIpKSArIHhPZmZzZXQ7XG4gICAgbGV0IG1hcFkgPSAodGlsZUNvb3Jkcy54ICsgdGlsZUNvb3Jkcy55KSAqICh0aGlzLnRpbGVIZWlnaHQgLyAyKTtcbiAgICByZXR1cm4ge3g6IG1hcFgsIHk6IG1hcFl9O1xuICB9XG5cbn07XG5cbmZ1bmN0aW9uIGJ1aWxkTWFwRGVmKG1hcCkge1xuICBsZXQgbWFwRGVmID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbWFwLm1hcFNpemU7IGkrKykge1xuICAgIG1hcERlZltpXSA9IFtdO1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgbWFwLm1hcFNpemU7IGorKykge1xuICAgICAgbWFwRGVmW2ldW2pdID0gbWFwLnRpbGVzW3JhbmQobWFwLnRpbGVzLmxlbmd0aCldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbWFwRGVmO1xufVxuXG5mdW5jdGlvbiBkcmF3TWFwQ2FudmFzKG1hcCkge1xuICBsZXQgbWFwQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgbWFwQ2FudmFzLndpZHRoID0gbWFwLm1hcFNpemUgKiBtYXAudGlsZVdpZHRoIC0gbWFwLm1hcFNpemU7XG4gIG1hcENhbnZhcy5oZWlnaHQgPSBtYXAubWFwU2l6ZSAqIG1hcC50aWxlSGVpZ2h0IC0gbWFwLm1hcFNpemU7XG5cbiAgZm9yIChsZXQgW3gsIHJvd10gb2YgbWFwLm1hcERlZi5lbnRyaWVzKCkpIHtcbiAgICBmb3IgKGxldCBbeSwgdGlsZV0gb2Ygcm93LmVudHJpZXMoKSkge1xuICAgICAgZHJhd1RpbGUobWFwLCBtYXBDYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpLCB0aWxlLCB4LCB5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1hcENhbnZhcztcbn1cblxuZnVuY3Rpb24gZHJhd1RpbGUobWFwLCBjb250ZXh0LCB0aWxlLCBtYXBYLCBtYXBZKSB7XG4gIGxldCBjb250ZXh0Q29vcmRzID0gbWFwLm1hcENvb3Jkc0ZvclRpbGUoe3g6IG1hcFgsIHk6IG1hcFl9KTtcbiAgY29udGV4dC5kcmF3SW1hZ2UodGlsZS5pbWcsIGNvbnRleHRDb29yZHMueCwgY29udGV4dENvb3Jkcy55LCBtYXAudGlsZVdpZHRoLCBtYXAudGlsZUhlaWdodCk7XG59XG5cbiIsIlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IEFzc2V0cyB9IGZyb20gXCIuL2Fzc2V0X21hbmFnZXJcIjtcbmltcG9ydCBBc3NldE93bmVyIGZyb20gXCIuL2Fzc2V0X293bmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVudGl0eSBleHRlbmRzIEFzc2V0T3duZXIge1xuXG4gIGNvbnN0cnVjdG9yKGFzc2V0UGF0aHMsIG1hcCwgc3RhcnRpbmdYTG9jLCBzdGFydGluZ1lMb2MpIHtcbiAgICBzdXBlcihhc3NldFBhdGhzKTtcbiAgICB0aGlzLmZyYW1lV2lkdGggPSA2MDtcbiAgICB0aGlzLmZyYW1lSGVpZ2h0ID0gMTEwO1xuICAgIHRoaXMubWFwID0gbWFwO1xuICAgIHRoaXMubG9jYXRpb24gPSB7XG4gICAgICB4OiAoKHN0YXJ0aW5nWExvYyA9PT0gdW5kZWZpbmVkKSA/IDAgOiBzdGFydGluZ1hMb2MpLFxuICAgICAgeTogKChzdGFydGluZ1lMb2MgPT09IHVuZGVmaW5lZCkgPyAwIDogc3RhcnRpbmdZTG9jKVxuICAgIH07XG4gICAgdGhpcy5kZXN0aW5hdGlvbiA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBpbWFnZSgpIHtcbiAgICByZXR1cm4gQXNzZXRzLmdldCh0aGlzLmFzc2V0UGF0aHNbMF0pO1xuICB9XG5cbiAgZ2V0IGZyYW1lWE9yaWdpbigpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGdldCBmcmFtZVlPcmlnaW4oKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICByZXNwb25kVG9Nb3VzZShldmVudCkge1xuICAgIGlmIChldmVudCAhPSB1bmRlZmluZWQpIHtcbiAgICAgIGxldCBuZXdEZXN0aW5hdGlvbiA9IHRoaXMubWFwQ29vcmRzV2l0aEZyYW1lT2Zmc2V0KHRoaXMubWFwLm1hcENvb3Jkc0ZvclRpbGUoe3g6IGV2ZW50LnRpbGVDb29yZC54LCB5OiBldmVudC50aWxlQ29vcmQueX0pKTtcbiAgICAgIHRoaXMuZGVzdGluYXRpb24gPSB7eDogbmV3RGVzdGluYXRpb24ueCwgeTogbmV3RGVzdGluYXRpb24ueX07XG4gICAgfVxuICB9XG5cbiAgdGljaygpIHtcbiAgICBpZiAodGhpcy5kZXN0aW5hdGlvbiAhPSB1bmRlZmluZWQpIHtcbiAgICAgIGxldCBkeCA9IHRoaXMubG9jYXRpb24ueCAtIHRoaXMuZGVzdGluYXRpb24ueCwgZHkgPSB0aGlzLmxvY2F0aW9uLnkgLSB0aGlzLmRlc3RpbmF0aW9uLnk7XG4gICAgICBsZXQgZGlzdCA9IE1hdGguc3FydChkeCpkeCtkeSpkeSk7XG5cbiAgICAgIGlmIChkaXN0ICE9IDApIHtcbiAgICAgICAgbGV0IHZlbFggPSAoIGR4IC8gZGlzdCApICogNTtcbiAgICAgICAgbGV0IHZlbFkgPSAoIGR5IC8gZGlzdCApICogNTtcblxuICAgICAgICBpZiAoTWF0aC5hYnMoZHgpIDwgTWF0aC5hYnModmVsWCkpIHtcbiAgICAgICAgICB2ZWxYID0gZHg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE1hdGguYWJzKGR5KSA8IE1hdGguYWJzKHZlbFkpKSB7XG4gICAgICAgICAgdmVsWSA9IGR5O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5sb2NhdGlvbi54IC09IHZlbFg7XG4gICAgICAgIHRoaXMubG9jYXRpb24ueSAtPSB2ZWxZO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZXN0aW5hdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH1cbiAgfVxuXG4gIG1hcENvb3Jkc1dpdGhGcmFtZU9mZnNldChtYXBDb29yZHMpIHtcbiAgICAvLyByZXR1cm4ge3g6IG1hcENvb3Jkcy54IC0gKHRoaXMuZnJhbWVXaWR0aCAvIDIpLCB5OiBtYXBDb29yZHMueSAtICh0aGlzLmZyYW1lSGVpZ2h0KX07XG4gICAgcmV0dXJuIHt4OiBtYXBDb29yZHMueCwgeTogbWFwQ29vcmRzLnl9O1xuICB9XG5cbn1cbiIsIlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBjb25zdCBJbnB1dCA9IChmdW5jdGlvbigpIHtcblxuICBsZXQga2V5c0Rvd24gPSBbXTtcbiAgbGV0IGtleXNQcmVzc2VkID0gW107XG4gIGxldCBtb3VzZUV2ZW50UG9pbnQgPSB1bmRlZmluZWQ7XG5cbiAgZnVuY3Rpb24ga2V5RG93bihrZXlDb2RlKSB7XG4gICAgaWYgKGtleXNQcmVzc2VkLmluZGV4T2Yoa2V5Q29kZSkgPCAwKSB7XG4gICAgICBrZXlzUHJlc3NlZC5wdXNoKGtleUNvZGUpO1xuICAgIH1cbiAgICBpZiAoa2V5c0Rvd24uaW5kZXhPZihrZXlDb2RlKSA8IDApIHtcbiAgICAgIGtleXNEb3duLnB1c2goa2V5Q29kZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24ga2V5VXAoa2V5Q29kZSkge1xuICAgIGtleXNEb3duID0ga2V5c0Rvd24uZmlsdGVyKCAoZWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuIGVsZW1lbnQgIT0ga2V5Q29kZTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEtleXNQcmVzc2VkKCkge1xuICAgIHJldHVybiBrZXlzRG93bi5jb25jYXQoa2V5c1ByZXNzZWQuZmlsdGVyKCAoa2V5KSA9PiB7XG4gICAgICByZXR1cm4ga2V5c0Rvd24uaW5kZXhPZihrZXkpIDwgMDtcbiAgICB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZVVwKHBvaW50KSB7XG4gICAgbW91c2VFdmVudFBvaW50ID0gcG9pbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRNb3VzZUV2ZW50KCkge1xuICAgIHJldHVybiBtb3VzZUV2ZW50UG9pbnQ7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldElucHV0cygpIHtcbiAgICBrZXlzUHJlc3NlZCA9IFtdO1xuICAgIG1vdXNlRXZlbnRQb2ludCA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAga2V5RG93bjoga2V5RG93bixcbiAgICBrZXlVcDoga2V5VXAsXG4gICAgZ2V0S2V5c1ByZXNzZWQ6IGdldEtleXNQcmVzc2VkLFxuICAgIG1vdXNlVXA6IG1vdXNlVXAsXG4gICAgZ2V0TW91c2VFdmVudDogZ2V0TW91c2VFdmVudCxcbiAgICByZXNldElucHV0czogcmVzZXRJbnB1dHNcbiAgfVxuXG59KSgpO1xuIiwiXG5cInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZXMvaW5kZXguY3NzXCI7XG5cbmltcG9ydCB7IEFzc2V0cyB9IGZyb20gXCIuL2Fzc2V0X21hbmFnZXJcIjtcbmltcG9ydCBUaWxlIGZyb20gXCIuL3RpbGVcIjtcbmltcG9ydCBNYXAgZnJvbSBcIi4vbWFwXCI7XG5pbXBvcnQgRW50aXR5IGZyb20gXCIuL2VudGl0eVwiO1xuaW1wb3J0IHsgdGlsZUltYWdlUGF0aHMsIG1vYmlsZVNwcml0ZVBhdGhzIH0gZnJvbSBcIi4vdXRpbFwiO1xuaW1wb3J0IHsgSW5wdXQgfSBmcm9tIFwiLi9pbnB1dFwiO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbigpIHtcblxuICBjb25zb2xlLmxvZyhcIlByb3htYSBSZXZlcmllIGFwcHJvYWNoZXMhXCIpO1xuXG4gIGxldCB0aWNrTGVuZ3RoID0gNTA7XG5cbiAgdmFyIHZpZXdwb3J0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZpZXdwb3J0LWNhbnZhcycpO1xuICB2YXIgdmlld3BvcnRDb250ZXh0ID0gdmlld3BvcnQuZ2V0Q29udGV4dCgnMmQnKTtcbiAgbGV0IHZpZXdwb3J0V2lkdGggPSA2MDAsIHZpZXdwb3J0SGVpZ2h0ID0gNDAwO1xuICB2aWV3cG9ydC53aWR0aCA9IHZpZXdwb3J0V2lkdGg7XG4gIHZpZXdwb3J0LmhlaWdodCA9IHZpZXdwb3J0SGVpZ2h0O1xuXG4gIGxldCBtYXBTaXplID0gMTA7XG5cbiAgLy8gbGV0IHZpZXdPZmZzZXRMaW1pdFggPSAobWFwU2l6ZSAqIHRpbGVXaWR0aCkgLSB2aWV3cG9ydFdpZHRoIC0gbWFwU2l6ZTtcbiAgLy8gbGV0IHZpZXdPZmZzZXRMaW1pdFkgPSAobWFwU2l6ZSAqIHRpbGVIZWlnaHQpIC0gdmlld3BvcnRIZWlnaHQgLSBtYXBTaXplO1xuXG4gIGxldCB0aWxlcyA9IFtdO1xuICBmb3IgKGxldCB0aWxlSW1hZ2VQYXRoIG9mIHRpbGVJbWFnZVBhdGhzKSB7XG4gICAgdGlsZXMucHVzaChuZXcgVGlsZShbdGlsZUltYWdlUGF0aF0pKTtcbiAgfVxuICBsZXQgbWFwID0gbmV3IE1hcCh0aWxlcywgbWFwU2l6ZSk7XG4gIGxldCBtb2JpbGUgPSBuZXcgRW50aXR5KG1vYmlsZVNwcml0ZVBhdGhzLCBtYXAsIHZpZXdwb3J0V2lkdGggLyAyLCB2aWV3cG9ydEhlaWdodCAvIDIpO1xuXG4gIEFzc2V0cy5sb2FkQXNzZXRzKFsuLi50aWxlcywgbW9iaWxlXSwgKCkgPT4ge1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvYWRpbmctaW1hZ2VzLW1lc3NhZ2UnKS5jbGFzc0xpc3QuYWRkKCdoaWRlJyk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltYWdlcy1sb2FkZWQtbWVzc2FnZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGUnKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuXG4gICAgICBsZXQgdmlld09mZnNldFggPSAoKG1hcC5tYXBDYW52YXMud2lkdGgpIC8gMikgLSAodmlld3BvcnRXaWR0aCAvIDIpO1xuICAgICAgbGV0IHZpZXdPZmZzZXRZID0gKChtYXAubWFwQ2FudmFzLmhlaWdodCkgLyAyKSAtICh2aWV3cG9ydEhlaWdodCAvIDIpO1xuXG4gICAgICBkb1RpY2sobWFwLCB2aWV3T2Zmc2V0WCwgdmlld09mZnNldFkpO1xuICAgIH0sIHRpY2tMZW5ndGgpO1xuXG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGRvVGljayhtYXAsIHZpZXdPZmZzZXRYLCB2aWV3T2Zmc2V0WSkge1xuICAgIC8vIGNvbnNvbGUubG9nKCd0aWNrJyk7XG4gICAgdmlld3BvcnRDb250ZXh0LmNsZWFyUmVjdCgwLCAwLCB2aWV3cG9ydFdpZHRoLCB2aWV3cG9ydEhlaWdodCk7XG4gICAgdmlld3BvcnRDb250ZXh0LmRyYXdJbWFnZShtYXAubWFwQ2FudmFzLCB2aWV3T2Zmc2V0WCwgdmlld09mZnNldFksIHZpZXdwb3J0V2lkdGgsIHZpZXdwb3J0SGVpZ2h0LCAwLCAwLCB2aWV3cG9ydFdpZHRoLCB2aWV3cG9ydEhlaWdodCk7XG5cbiAgICBsZXQgbW91c2VFdmVudCA9IElucHV0LmdldE1vdXNlRXZlbnQoKTtcbiAgICBpZiAobW91c2VFdmVudCAhPSB1bmRlZmluZWQpIHtcblxuICAgICAgbGV0IG1hcFBvc2l0aW9uID0gZ2V0Q3Vyc29yTWFwUG9zaXRpb24odmlld09mZnNldFgsIHZpZXdPZmZzZXRZLCBtb3VzZUV2ZW50KTtcbiAgICAgIGxldCB0aWxlUG9zaXRpb24gPSBnZXRDdXJzb3JUaWxlUG9zaXRpb24obWFwLCBtYXBQb3NpdGlvbik7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIlwiKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGBjYW52YXMgcG9zaXRpb246ICR7bW91c2VFdmVudC54fSwgJHttb3VzZUV2ZW50Lnl9YCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhgbWFwIHBvc2l0aW9uOiAke21hcFBvc2l0aW9uLnh9LCAke21hcFBvc2l0aW9uLnl9YCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhgdGlsZSBwb3NpdGlvbjogJHt0aWxlUG9zaXRpb24ueH0sICR7dGlsZVBvc2l0aW9uLnl9YCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIlwiKTtcblxuICAgICAgbW9iaWxlLnJlc3BvbmRUb01vdXNlKHttYXBDb29yZDogbWFwUG9zaXRpb24sIHRpbGVDb29yZDogdGlsZVBvc2l0aW9ufSk7XG4gICAgfVxuXG4gICAgbW9iaWxlLnRpY2soKTtcbiAgICAvLyBjb25zb2xlLmxvZyhtb2JpbGUubG9jYXRpb24pO1xuICAgIHZpZXdwb3J0Q29udGV4dC5kcmF3SW1hZ2UoXG4gICAgICBtb2JpbGUuaW1hZ2UsXG4gICAgICBtb2JpbGUuZnJhbWVYT3JpZ2luLCBtb2JpbGUuZnJhbWVZT3JpZ2luLFxuICAgICAgbW9iaWxlLmZyYW1lV2lkdGgsIG1vYmlsZS5mcmFtZUhlaWdodCxcbiAgICAgIChtb2JpbGUubG9jYXRpb24ueCAtIHZpZXdPZmZzZXRYKSxcbiAgICAgIChtb2JpbGUubG9jYXRpb24ueSAtIHZpZXdPZmZzZXRZKSxcbiAgICAgIG1vYmlsZS5mcmFtZVdpZHRoLCBtb2JpbGUuZnJhbWVIZWlnaHRcbiAgICApO1xuXG4gICAgSW5wdXQucmVzZXRJbnB1dHMoKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgZG9UaWNrKG1hcCwgdmlld09mZnNldFgsIHZpZXdPZmZzZXRZKTtcbiAgICB9LCB0aWNrTGVuZ3RoKTtcblxuICB9XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAgIElucHV0LmtleURvd24oZXZlbnQua2V5KTtcbiAgfSk7XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCAoZXZlbnQpID0+IHtcbiAgICBJbnB1dC5rZXlVcChldmVudC5rZXkpO1xuICB9KTtcblxuICB2aWV3cG9ydC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgKGV2ZW50KSA9PiB7XG4gICAgSW5wdXQubW91c2VVcChnZXRDdXJzb3JDYW52YXNQb3NpdGlvbih2aWV3cG9ydCwgZXZlbnQpKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gZ2V0Q3Vyc29yQ2FudmFzUG9zaXRpb24oY2FudmFzLCBwb3NpdGlvbikge1xuICAgIGxldCByZWN0ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGxldCB4ID0gcG9zaXRpb24uY2xpZW50WCAtIHJlY3QubGVmdDtcbiAgICBsZXQgeSA9IHBvc2l0aW9uLmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDdXJzb3JNYXBQb3NpdGlvbih2aWV3T2Zmc2V0WCwgdmlld09mZnNldFksIHBvc2l0aW9uKSB7XG4gICAgbGV0IG1vdXNlTWFwWCA9IHZpZXdPZmZzZXRYICsgcG9zaXRpb24ueDtcbiAgICBsZXQgbW91c2VNYXBZID0gdmlld09mZnNldFkgKyBwb3NpdGlvbi55O1xuICAgIHJldHVybiB7IHg6IG1vdXNlTWFwWCwgeTogbW91c2VNYXBZIH07XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDdXJzb3JUaWxlUG9zaXRpb24obWFwLCBwb3NpdGlvbikge1xuICAgIGxldCBoYWxmVGlsZVdpZHRoID0gbWFwLnRpbGVXaWR0aCAvIDI7XG4gICAgbGV0IGhhbGZUaWxlSGVpZ2h0ID0gbWFwLnRpbGVIZWlnaHQgLyAyO1xuICAgIGxldCBoYWxmTWFwU2l6ZSA9IG1hcC5tYXBTaXplIC8gMjtcbiAgICBsZXQgdGlsZVggPSAoKHBvc2l0aW9uLnggLyBoYWxmVGlsZVdpZHRoICArIHBvc2l0aW9uLnkgLyBoYWxmVGlsZUhlaWdodCkgLyAyKSAtIGhhbGZNYXBTaXplO1xuICAgIGxldCB0aWxlWSA9ICgocG9zaXRpb24ueSAvIGhhbGZUaWxlSGVpZ2h0IC0gcG9zaXRpb24ueCAvIGhhbGZUaWxlV2lkdGgpIC8gMikgKyBoYWxmTWFwU2l6ZTtcbiAgICByZXR1cm4geyB4OiBNYXRoLmZsb29yKHRpbGVYKSwgeTogTWF0aC5mbG9vcih0aWxlWSkgfTtcbiAgfVxuXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN0Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzPzU5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")}]);