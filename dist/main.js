!function(t){var n={};function e(i){if(n[i])return n[i].exports;var g=n[i]={i:i,l:!1,exports:{}};return t[i].call(g.exports,g,g.exports,e),g.l=!0,g.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/asset_manager.js\n\n\n\nconst Assets = (function() {\n\n  let assets = {};\n\n  function loadAssets(assetOwners, callback) {\n    let tempAssetPaths = []\n    for (let assetOwner of assetOwners) {\n      tempAssetPaths = tempAssetPaths.concat(assetOwner.assetPaths);\n    }\n    let assetPaths = [... new Set(tempAssetPaths)];\n\n    let assetsRemaining = assetPaths.length;\n    for (let assetPath of assetPaths) {\n\n      let asset = new Image();\n      asset.onload = function() {\n        assets[assetPath] = asset;\n        assetsRemaining--;\n        if (assetsRemaining <= 0) {\n          callback();\n        }\n      };\n      asset.src = assetPath;\n    }\n  }\n\n  function get(assetPath) {\n    return assets[assetPath];\n  }\n\n  return {\n    loadAssets: loadAssets,\n    get: get\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/asset_owner.js\n\n\n\nclass AssetOwner {\n\n  constructor(assetPaths) {\n    this.assetPaths = assetPaths;\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/tile.js\n\n\n\n\n\n\nclass tile_Tile extends AssetOwner {\n\n  constructor(assetPaths) {\n    super(assetPaths);\n    this.tileWidth = 128;\n    this.tileHeight = 64;\n    this.imageFrameIndex = 0;\n  }\n\n  get img() {\n    return Assets.get(this.assetPaths[this.imageFrameIndex]);\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\nconst tileImagePaths = [\n  './src/img/ground_tiles/brickpavers2.png',\n  './src/img/ground_tiles/concrete368a.png',\n  './src/img/ground_tiles/cretebrick970.png',\n  './src/img/ground_tiles/dirt.png',\n  './src/img/ground_tiles/dirtsand2.png',\n  './src/img/ground_tiles/rock.png',\n  './src/img/ground_tiles/snow.png',\n  './src/img/ground_tiles/stone.png'\n];\n\nconst mobileSpritePaths = [\n  './src/img/mobiles/8way_mobile.png'\n]\n\nconst rand = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n// CONCATENATED MODULE: ./src/map.js\n\n\n\n\n\nclass Map {\n\n  constructor(tiles, mapSize) {\n    this.tiles = tiles;\n    this.mapSize = mapSize;\n    this.tileWidth = tiles[0].tileWidth;\n    this.tileHeight = tiles[0].tileHeight;\n    this.mapDef = buildMapDef(this);\n  }\n\n  get mapCanvas() {\n    if (this.myMapCanvas == undefined) {\n      this.myMapCanvas = drawMapCanvas(this);\n    }\n    return this.myMapCanvas;\n  }\n\n  mapCoordsForTile(tileCoords) {\n    let xOffset = ((this.mapSize * this.tileWidth) / 2) - (this.tileWidth / 2);\n    let mapX = ((tileCoords.x - tileCoords.y) * (this.tileWidth / 2)) + xOffset;\n    let mapY = (tileCoords.x + tileCoords.y) * (this.tileHeight / 2);\n    return {x: mapX, y: mapY};\n  }\n\n  tileOffsets() {\n    return { x: this.tileWidth / 2, y: this.tileHeight / 2 };\n  }\n\n};\n\nfunction buildMapDef(map) {\n  let mapDef = [];\n  for (let i = 0; i < map.mapSize; i++) {\n    mapDef[i] = [];\n    for (let j = 0; j < map.mapSize; j++) {\n      mapDef[i][j] = map.tiles[rand(map.tiles.length)];\n    }\n  }\n  return mapDef;\n}\n\nfunction drawMapCanvas(map) {\n  let mapCanvas = document.createElement(\"canvas\");\n  mapCanvas.width = map.mapSize * map.tileWidth - map.mapSize;\n  mapCanvas.height = map.mapSize * map.tileHeight - map.mapSize;\n\n  for (let [x, row] of map.mapDef.entries()) {\n    for (let [y, tile] of row.entries()) {\n      drawTile(map, mapCanvas.getContext(\"2d\"), tile, x, y);\n    }\n  }\n  return mapCanvas;\n}\n\nfunction drawTile(map, context, tile, mapX, mapY) {\n  let contextCoords = map.mapCoordsForTile({x: mapX, y: mapY});\n  context.drawImage(tile.img, contextCoords.x, contextCoords.y, map.tileWidth, map.tileHeight);\n}\n\n\n// CONCATENATED MODULE: ./src/entity.js\n\n\n\n\n\n\nclass entity_Entity extends AssetOwner {\n\n  constructor(assetPaths, map, startingXLoc, startingYLoc) {\n    super(assetPaths);\n    this.frameWidth = 60;\n    this.frameHeight = 110;\n    this.map = map;\n    this.location = {\n      x: ((startingXLoc === undefined) ? 0 : startingXLoc),\n      y: ((startingYLoc === undefined) ? 0 : startingYLoc)\n    };\n    this.destination = undefined;\n  }\n\n  get image() {\n    return Assets.get(this.assetPaths[0]);\n  }\n\n  get frameXOrigin() {\n    return 0;\n  }\n\n  get frameYOrigin() {\n    return 0;\n  }\n\n  respondToMouse(event) {\n    if (event != undefined) {\n      let tileOffset = this.map.tileOffsets();\n      let frameOffset = { x: this.frameWidth / 2, y: this.frameHeight };\n      let mapDestination = this.map.mapCoordsForTile({x: event.tileCoord.x, y: event.tileCoord.y});\n      this.destination = {\n        x: mapDestination.x + tileOffset.x - frameOffset.x,\n        y: mapDestination.y + tileOffset.y - frameOffset.y,\n      }\n    }\n  }\n\n  tick() {\n    if (this.destination != undefined) {\n      let dx = this.location.x - this.destination.x, dy = this.location.y - this.destination.y;\n      let dist = Math.sqrt(dx*dx+dy*dy);\n\n      if (dist != 0) {\n        let velX = ( dx / dist ) * 5;\n        let velY = ( dy / dist ) * 5;\n\n        if (Math.abs(dx) < Math.abs(velX)) {\n          velX = dx;\n        }\n        if (Math.abs(dy) < Math.abs(velY)) {\n          velY = dy;\n        }\n\n        this.location.x -= velX;\n        this.location.y -= velY;\n      } else {\n        this.destination = undefined;\n      }\n\n    }\n  }\n\n  mapCoordsWithFrameOffset(mapCoords) {\n    return {x: mapCoords.x - (this.frameWidth / 2), y: mapCoords.y - (this.frameHeight)};\n    // return {x: mapCoords.x, y: mapCoords.y};\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/input.js\n\n\n\nconst Input = (function() {\n\n  let keysDown = [];\n  let keysPressed = [];\n  let mouseEventPoint = undefined;\n\n  function keyDown(keyCode) {\n    if (keysPressed.indexOf(keyCode) < 0) {\n      keysPressed.push(keyCode);\n    }\n    if (keysDown.indexOf(keyCode) < 0) {\n      keysDown.push(keyCode);\n    }\n  }\n\n  function keyUp(keyCode) {\n    keysDown = keysDown.filter( (element) => {\n      return element != keyCode;\n    });\n  }\n\n  function getKeysPressed() {\n    return keysDown.concat(keysPressed.filter( (key) => {\n      return keysDown.indexOf(key) < 0;\n    }));\n  }\n\n  function mouseUp(point) {\n    mouseEventPoint = point;\n  }\n\n  function getMouseEvent() {\n    return mouseEventPoint;\n  }\n\n  function resetInputs() {\n    keysPressed = [];\n    mouseEventPoint = undefined;\n  }\n\n  return {\n    keyDown: keyDown,\n    keyUp: keyUp,\n    getKeysPressed: getKeysPressed,\n    mouseUp: mouseUp,\n    getMouseEvent: getMouseEvent,\n    resetInputs: resetInputs\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n  console.log(\"Proxma Reverie approaches!\");\n\n  let tickLength = 50;\n\n  var viewport = document.getElementById('viewport-canvas');\n  var viewportContext = viewport.getContext('2d');\n  let viewportWidth = 600, viewportHeight = 400;\n  viewport.width = viewportWidth;\n  viewport.height = viewportHeight;\n\n  let mapSize = 10;\n\n  // let viewOffsetLimitX = (mapSize * tileWidth) - viewportWidth - mapSize;\n  // let viewOffsetLimitY = (mapSize * tileHeight) - viewportHeight - mapSize;\n\n  let tiles = [];\n  for (let tileImagePath of tileImagePaths) {\n    tiles.push(new tile_Tile([tileImagePath]));\n  }\n  let map = new Map(tiles, mapSize);\n  let mobile = new entity_Entity(mobileSpritePaths, map, viewportWidth / 2, viewportHeight / 2);\n\n  Assets.loadAssets([...tiles, mobile], () => {\n\n    document.getElementById('loading-images-message').classList.add('hide');\n    document.getElementById('images-loaded-message').classList.remove('hide');\n\n    setTimeout(() => {\n\n      let viewOffsetX = ((map.mapCanvas.width) / 2) - (viewportWidth / 2);\n      let viewOffsetY = ((map.mapCanvas.height) / 2) - (viewportHeight / 2);\n\n      doTick(map, viewOffsetX, viewOffsetY);\n    }, tickLength);\n\n  });\n\n  function doTick(map, viewOffsetX, viewOffsetY) {\n    // console.log('tick');\n    viewportContext.clearRect(0, 0, viewportWidth, viewportHeight);\n    viewportContext.drawImage(map.mapCanvas, viewOffsetX, viewOffsetY, viewportWidth, viewportHeight, 0, 0, viewportWidth, viewportHeight);\n\n    let mouseEvent = Input.getMouseEvent();\n    if (mouseEvent != undefined) {\n\n      let mapPosition = getCursorMapPosition(viewOffsetX, viewOffsetY, mouseEvent);\n      let tilePosition = getCursorTilePosition(map, mapPosition);\n      // console.log(\"\");\n      // console.log(`canvas position: ${mouseEvent.x}, ${mouseEvent.y}`);\n      // console.log(`map position: ${mapPosition.x}, ${mapPosition.y}`);\n      // console.log(`tile position: ${tilePosition.x}, ${tilePosition.y}`);\n      // console.log(\"\");\n\n      mobile.respondToMouse({mapCoord: mapPosition, tileCoord: tilePosition});\n    }\n\n    mobile.tick();\n    // console.log(mobile.location);\n    viewportContext.drawImage(\n      mobile.image,\n      mobile.frameXOrigin, mobile.frameYOrigin,\n      mobile.frameWidth, mobile.frameHeight,\n      (mobile.location.x - viewOffsetX),\n      (mobile.location.y - viewOffsetY),\n      mobile.frameWidth, mobile.frameHeight\n    );\n\n    Input.resetInputs();\n\n    setTimeout(() => {\n      doTick(map, viewOffsetX, viewOffsetY);\n    }, tickLength);\n\n  }\n\n  document.addEventListener('keydown', (event) => {\n    Input.keyDown(event.key);\n  });\n\n  document.addEventListener('keyup', (event) => {\n    Input.keyUp(event.key);\n  });\n\n  viewport.addEventListener('mouseup', (event) => {\n    Input.mouseUp(getCursorCanvasPosition(viewport, event));\n  });\n\n  function getCursorCanvasPosition(canvas, position) {\n    let rect = canvas.getBoundingClientRect();\n    let x = position.clientX - rect.left;\n    let y = position.clientY - rect.top;\n    return { x: x, y: y };\n  }\n\n  function getCursorMapPosition(viewOffsetX, viewOffsetY, position) {\n    let mouseMapX = viewOffsetX + position.x;\n    let mouseMapY = viewOffsetY + position.y;\n    return { x: mouseMapX, y: mouseMapY };\n  }\n\n  function getCursorTilePosition(map, position) {\n    let halfTileWidth = map.tileWidth / 2;\n    let halfTileHeight = map.tileHeight / 2;\n    let halfMapSize = map.mapSize / 2;\n    let tileX = ((position.x / halfTileWidth  + position.y / halfTileHeight) / 2) - halfMapSize;\n    let tileY = ((position.y / halfTileHeight - position.x / halfTileWidth) / 2) + halfMapSize;\n    return { x: Math.floor(tileX), y: Math.floor(tileY) };\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzPzU5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")}]);