!function(n){var t={};function e(g){if(t[g])return t[g].exports;var B=t[g]={i:g,l:!1,exports:{}};return n[g].call(B.exports,B,B.exports,e),B.l=!0,B.exports}e.m=n,e.c=t,e.d=function(n,t,g){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:g})},e.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/asset_manager.js\n\n\n\nconst Assets = (function() {\n\n  let assets = {};\n\n  function loadAssets(assetOwners, callback) {\n    let tempAssetPaths = []\n    for (let assetOwner of assetOwners) {\n      tempAssetPaths = tempAssetPaths.concat(assetOwner.assetPaths);\n    }\n    let assetPaths = [... new Set(tempAssetPaths)];\n\n    let assetsRemaining = assetPaths.length;\n    for (let assetPath of assetPaths) {\n      let asset = new Image();\n      asset.onload = function() {\n        assets[assetPath] = asset;\n        assetsRemaining--;\n        if (assetsRemaining <= 0) {\n          for (let assetOwner of assetOwners) {\n            assetOwner.loadComplete();\n          }\n          callback();\n        }\n      };\n      asset.src = assetPath;\n    }\n  }\n\n  function get(assetPath) {\n    return assets[assetPath];\n  }\n\n  return {\n    loadAssets: loadAssets,\n    get: get\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/util.js\n\n\n\nconst tileImagePaths = [\n  './src/img/ground_tiles/brickpavers2.png',\n  './src/img/ground_tiles/concrete368a.png',\n  './src/img/ground_tiles/cretebrick970.png',\n  './src/img/ground_tiles/dirt.png',\n  './src/img/ground_tiles/dirtsand2.png',\n  './src/img/ground_tiles/rock.png',\n  './src/img/ground_tiles/snow.png',\n  './src/img/ground_tiles/stone.png'\n];\n\nconst mobileSpritePath = [\n  './src/img/mobiles/8way_mobile.png'\n]\n\nconst rand = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n// CONCATENATED MODULE: ./src/asset_owner.js\n\n\n\nclass AssetOwner {\n\n  constructor(assetPaths) {\n    this.assetPaths = assetPaths;\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/map.js\n\n\n\n\n\n\n\nclass map_Map extends AssetOwner {\n\n  constructor(tileImagePaths, mapSize, tileWidth, tileHeight) {\n    super(tileImagePaths);\n    this.mapSize = mapSize;\n    this.tileWidth = tileWidth;\n    this.tileHeight = tileHeight;\n    this.mapDef = buildMapDef(this);\n  }\n\n  loadComplete() {\n    this.mapImage = drawMap(this);\n  }\n\n};\n\nfunction buildMapDef(map) {\n  let mapDef = [];\n  for (let i = 0; i < map.mapSize; i++) {\n    mapDef[i] = [];\n    for (let j = 0; j < map.mapSize; j++) {\n      mapDef[i][j] = map.assetPaths[rand(map.assetPaths.length)];\n    }\n  }\n  return mapDef;\n}\n\nfunction drawMap(map) {\n  let mapCanvas = document.createElement(\"canvas\");\n  mapCanvas.width = map.mapSize * map.tileWidth - map.mapSize;\n  mapCanvas.height = map.mapSize * map.tileHeight - map.mapSize;\n\n  for (let [x, row] of map.mapDef.entries()) {\n    for (let [y, tilePath] of row.entries()) {\n      drawTile(map, mapCanvas.getContext(\"2d\"), Assets.get(tilePath), x, y);\n    }\n  }\n  return mapCanvas;\n}\n\nfunction drawTile(map, context, img, mapX, mapY) {\n  let xOffset = ((map.mapSize * map.tileWidth) / 2) - (map.tileWidth / 2);\n  let contextX = ((mapX - mapY) * (map.tileWidth / 2)) - mapX + xOffset;\n  let contextY = (mapX + mapY) * (map.tileHeight / 2) - mapY;\n  context.drawImage(img, contextX, contextY, map.tileWidth, map.tileHeight);\n}\n\n// CONCATENATED MODULE: ./src/entity.js\n\n\n\n\n\n\nclass entity_Entity extends AssetOwner {\n\n  constructor(assetPaths, startingXLoc, startingYLoc) {\n    super(assetPaths);\n    this.frameWidth = 60;\n    this.frameHeight = 110;\n    this.location = {\n      x: ((startingXLoc === undefined) ? 0 : startingXLoc),\n      y: ((startingYLoc === undefined) ? 0 : startingYLoc)\n    };\n    this.destination = undefined;\n  }\n\n  loadComplete() {}\n\n  get image() {\n    return Assets.get(this.assetPaths[0]);\n  }\n\n  get frameXOrigin() {\n    return 0;\n  }\n\n  get frameYOrigin() {\n    return 0;\n  }\n\n  respondToMouse(event) {\n    this.destination = {x: event.x, y: event.y};\n  }\n\n  tick() {\n    if (this.destination != undefined) {\n      let dx = this.location.x - this.destination.x, dy = this.location.y - this.destination.y;\n      let dist = Math.sqrt(dx*dx+dy*dy);\n\n      let velX = ( dx / dist) * 5;\n      let velY = ( dy / dist ) * 5;\n\n      this.location.x -= velX;\n      this.location.y -= velY;\n    }\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/input.js\n\n\n\nconst Input = (function() {\n\n  let keysDown = [];\n  let keysPressed = [];\n  let mouseEventPoint = undefined;\n\n  function keyDown(keyCode) {\n    if (keysPressed.indexOf(keyCode) < 0) {\n      keysPressed.push(keyCode);\n    }\n    if (keysDown.indexOf(keyCode) < 0) {\n      keysDown.push(keyCode);\n    }\n  }\n\n  function keyUp(keyCode) {\n    keysDown = keysDown.filter( (element) => {\n      return element != keyCode;\n    });\n  }\n\n  function getKeysPressed() {\n    return keysDown.concat(keysPressed.filter( (key) => {\n      return keysDown.indexOf(key) < 0;\n    }));\n  }\n\n  function mouseUp(point) {\n    mouseEventPoint = point;\n  }\n\n  function getMouseEvent() {\n    return mouseEventPoint;\n  }\n\n  function resetInputs() {\n    keysPressed = [];\n    mouseEventPoint = undefined;\n  }\n\n  return {\n    keyDown: keyDown,\n    keyUp: keyUp,\n    getKeysPressed: getKeysPressed,\n    mouseUp: mouseUp,\n    getMouseEvent: getMouseEvent,\n    resetInputs: resetInputs\n  }\n\n})();\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\n  console.log(\"Proxma Reverie approaches!\");\n\n  var viewport = document.getElementById('viewport-canvas');\n  var viewportContext = viewport.getContext('2d');\n  let viewportWidth = 600, viewportHeight = 400;\n  viewport.width = viewportWidth;\n  viewport.height = viewportHeight;\n\n  let tileWidth = 128, tileHeight = 64;\n\n  let mapSize = 10;\n\n  let viewOffsetLimitX = (mapSize * tileWidth) - viewportWidth - mapSize;\n  let viewOffsetLimitY = (mapSize * tileHeight) - viewportHeight - mapSize;\n\n  let map = new map_Map(tileImagePaths, mapSize, tileWidth, tileHeight);\n  let mobile = new entity_Entity(mobileSpritePath, viewportWidth / 2, viewportHeight / 2);\n\n  Assets.loadAssets([map, mobile], () => {\n\n    document.getElementById('loading-images-message').classList.add('hide');\n    document.getElementById('images-loaded-message').classList.remove('hide');\n\n    setTimeout(() => {\n      doTick(map);\n    }, 500);\n\n  });\n\n  let viewOffsetX = ((mapSize * tileWidth - mapSize) / 2) - (viewportWidth / 2);\n  let viewOffsetY = ((mapSize * tileHeight - mapSize) / 2) - (viewportHeight / 2);\n\n  function doTick(map) {\n    // console.log('tick');\n    viewportContext.clearRect(0, 0, viewportWidth, viewportHeight);\n    viewportContext.drawImage(map.mapImage, viewOffsetX, viewOffsetY, viewportWidth, viewportHeight, 0, 0, viewportWidth, viewportHeight);\n\n    let mouseEvent = Input.getMouseEvent();\n    if (mouseEvent != undefined) {\n      mobile.respondToMouse(mouseEvent);\n    }\n\n    mobile.tick();\n\n    viewportContext.drawImage(\n      mobile.image,\n      mobile.frameXOrigin, mobile.frameYOrigin,\n      mobile.frameWidth, mobile.frameHeight,\n      mobile.location.x, mobile.location.y,\n      mobile.frameWidth, mobile.frameHeight\n    );\n\n    Input.resetInputs();\n\n    setTimeout(() => {\n      doTick(map);\n    }, 500);\n\n  }\n\n  document.addEventListener('keydown', (event) => {\n    Input.keyDown(event.key);\n  });\n\n  document.addEventListener('keyup', (event) => {\n    Input.keyUp(event.key);\n  });\n\n  viewport.addEventListener('mouseup', (event) => {\n    Input.mouseUp(getCursorPosition(viewport, event));\n  });\n\n  function getCursorPosition(canvas, event) {\n    var rect = canvas.getBoundingClientRect();\n    var x = event.clientX - rect.left;\n    var y = event.clientY - rect.top;\n    return {x: x, y: y};\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZXMvaW5kZXguY3NzPzU5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")}]);